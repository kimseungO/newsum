apiVersion: batch/v1
kind: CronJob
metadata:
  name: news-processing-pipeline # CronJob의 이름
  namespace: site # CronJob을 배포할 네임스페이스 (필요에 따라 변경)
spec:
  schedule: "*/15 * * * *" # 매일 새벽 2시에 실행 (Cron 형식)
                        # 예시: "*/5 * * * *" (매 5분마다)
  concurrencyPolicy: Forbid # 이전 Job이 아직 실행 중이면 새 Job을 시작하지 않음
  successfulJobsHistoryLimit: 1 # 성공한 Job의 기록을 1개만 유지
  failedJobsHistoryLimit: 1   # 실패한 Job의 기록을 1개만 유지
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure # Pod 내 컨테이너 실패 시 재시작 정책
          volumes:
            - name: shared-data # 컨테이너 간 데이터를 공유할 emptyDir 볼륨 정의
              emptyDir: {}      # Pod의 수명 동안만 존재하는 임시 볼륨
          initContainers: # 메인 컨테이너 시작 전 순차적으로 실행될 컨테이너들
            - name: py38-data-collection-clustering # 첫 번째 initContainer (Python 3.8)
              image: seungo/data_raw:v1 # Docker Hub 이미지 경로
              imagePullPolicy: Always # 항상 최신 이미지를 풀(pull)하도록 설정
              volumeMounts:
                - name: shared-data
                  mountPath: /app/data # 컨테이너 내부의 /app/data 경로에 마운트
              env: # 환경 변수 (Kubernetes Secrets 또는 ConfigMaps 사용 권장)
                - name: NAVER_CLIENT_ID
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: NAVER_CLIENT_ID
                - name: NAVER_KEY
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets # 생성할 Secret의 이름
                      key: NAVER_KEY         # Secret 내의 키
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_HOST
                - name: DB_USER
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_USER
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_PASSWORD
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_NAME
              # CMD는 Dockerfile에서 정의된 것을 사용합니다. (naverapi.py && news_cluster.py)

          containers: # initContainers가 모두 성공적으로 완료된 후 실행될 메인 컨테이너
            - name: py310-ai-summary # 메인 컨테이너 (Python 3.10)
              image: seungo/data_sum:v1 # Docker Hub 이미지 경로
              imagePullPolicy: Always
              volumeMounts:
                - name: shared-data
                  mountPath: /app/data # 컨테이너 내부의 /app/data 경로에 마운트
              env: # 환경 변수 (Kubernetes Secrets 또는 ConfigMaps 사용 권장)
                - name: GOOGLE_API_KEY
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: GOOGLE_API_KEY
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_HOST
                - name: DB_USER
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_USER
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_PASSWORD
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef: # Secret에서 민감 정보 가져오기 (권장)
                      name: news-api-secrets
                      key: DB_NAME
              # CMD는 Dockerfile에서 정의된 것을 사용합니다. (python3 AIapi.py)

